doctype html
html
  head
    meta(charset='euc-kr')
    title 프로그라피드백
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css')
  body
    .container
      h3 PrograFeedback
      iframe(src='https://view.officeapps.live.com/op/embed.aspx?src=http://prografeed.com/#{pptname}', width='72%', height='600px', frameborder='0')
      #side
        #messages
        form.form-inline
          .form-group
            input#msgForm.form-control(type='text')        
          button.btn.btn-primary(type='submit') Send
        img#balloon(src="/balloon.png", width="30px", height="30px")
      style.
        .container { margin: auto; }
        h3 { width: 70vw; height: 5vh; margin-top: 40px;}
        iframe { float: left; }
        #side { list-style-type: none; margin: 0; padding: 0; width: 28%; height: 600px; position: relative; float: left;}
        #messages { width: 100%; height: 550px; overflow: auto; }
        #messages div { padding: 5px 10px; }
        #messages div:nth-child(odd) { background: #eee; }
        form { position: absolute; bottom: 0 }
        .form-control { margin: 10px; width: 50px; }
        #balloon { position: absolute; bottom: 10px; right: 0;}
    script(src='/javascripts/socket.io.js')
    script(src='/javascripts/jquery.min.js')
    script.
      $(function(){
        function sizeUp() {
          $('#balloon').width($('#balloon').width() + 1);
          $('#balloon').height($('#balloon').height() + 1);
        }
        var sizeUpId;
        $('#balloon').mousedown(function() {
          event.preventDefault();
          sizeUpId = setInterval(sizeUp, 10);
        }).mouseup(function() {
            clearInterval(sizeUpId);
            $("form").append("<img src='/boom.png' id='boom' style='position: absolute; bottom: 10px; right: 0;'>");
            var boom = $("form").find("#boom");
            boom.width($('#balloon').width() + 1);
            boom.height($('#balloon').height() + 1);
            $('#balloon').width("30px");
            $('#balloon').height("30px");
            $('#balloon').fadeOut(10);
            
            socket.emit("chat", { msg: "별풍" + Math.ceil(Math.pow(3, boom.width()/30)) + "개를 쏘았습니다!"});
 
            $.when(boom.fadeOut(500))
                        .done(function() {
               boom.remove();
               $('#balloon').fadeIn(10);
            });
            
        }).click(function() {
            sizeUp();
        });
        
        //$.each(!{conversations}, function(key, val) {
        //  var conversation = JSON.parse(JSON.stringify(val))
        //  $.each(conversation, function(key, val) {
        //    $("#messages").append("<div><strong>" + key + " : </strong>" + val + "</div>");
        //    $("#messages").scrollTop($("#messages")[0].scrollHeight);
        //  });
        //});

        // socket.io 서버에 접속한다
        var socket = io();
        // 서버로 자신의 정보를 전송한다.
        socket.emit("login", {
          name: "!{nickname}",
          room: "!{roomId}"
        });
        // 서버로부터의 메시지가 수신되면
        socket.on("login", function (data) {
          $("#messages").append("<div><strong>" + data + "</strong> has joined</div>");
        });

        // 기존 채팅 데이터를 수신한다
        socket.emit("receive_prev_chat_data");
        socket.on("receive_prev_chat_data_continue", function (received) {
          received.forEach(function(data) {
            $("#messages").append("<div><strong>" + data.nickname + " : </strong>" + data.body + "</div>");
          })
          $("#messages").scrollTop($("#messages")[0].scrollHeight);
        });
        socket.on("receive_prev_chat_data_complete", function (data) {
         console.log('receive_prev_chat_data_complete')
        });

        // 서버로부터의 메시지가 수신되면
        socket.on("s2c chat", function(data) {
          var reg = /별풍[0-9]*개를 쏘았습니다!/;
          if (reg.test(data.body)) {
            $("#messages").append("<div><strong>" + data.nickname + " : </strong><strong>" + data.body + "</strong></br><img src='/mini.png'></div>");
          }
          else {
            $("#messages").append("<div><strong>" + data.nickname + " : </strong>" + data.body + "</div>");
          }
          $("#messages").scrollTop($("#messages")[0].scrollHeight);
        });
        socket.on("receive_current_user_continue", function(data){
          console.log(data)
        })
        // Send 버튼이 클릭되면
        $("form").submit(function(e) {
          e.preventDefault();
          var $msgForm = $("#msgForm");
        // 서버로 메시지를 전송한다.
        socket.emit("chat", { msg: $msgForm.val() });
          $msgForm.val("");
        });
        if (window.history && history.pushState) {
          addEventListener('load', function () {
            history.pushState(null, null, null); // creates new history entry with same URL
            addEventListener('popstate', function () {
              socket.disconnect()
              socket.emit("forceDisconnect");
              history.back()
            });
          });
        }
      });


